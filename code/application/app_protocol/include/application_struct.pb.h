// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: application_struct.proto

#ifndef PROTOBUF_application_5fstruct_2eproto__INCLUDED
#define PROTOBUF_application_5fstruct_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "general_struct.pb.h"
// @@protoc_insertion_point(includes)

namespace application {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_application_5fstruct_2eproto();
void protobuf_AssignDesc_application_5fstruct_2eproto();
void protobuf_ShutdownFile_application_5fstruct_2eproto();

class T_APP_LOGIN_REQ;
class T_APP_GET_ONLINE_USER_REQ;
class T_APP_REGIST_USER_RSP;
class T_APP_MODIFY_PASSWD_REQ;
class T_APP_SEND_MESSAGE_REQ;
class T_APP_MODIFY_PASSWD_RSP;
class T_APP_LOGIN_RSP;
class T_APP_UPDATE_ONLINE_USER_NTF;
class T_APP_TRANSMIT_MESSAGE_ACT;
class T_APP_SEND_MESSAGE_RSP;
class T_APP_REGIST_USER_REQ;
class T_APP_GET_ONLINE_USER_RSP;

// ===================================================================

class T_APP_LOGIN_REQ : public ::google::protobuf::Message {
 public:
  T_APP_LOGIN_REQ();
  virtual ~T_APP_LOGIN_REQ();

  T_APP_LOGIN_REQ(const T_APP_LOGIN_REQ& from);

  inline T_APP_LOGIN_REQ& operator=(const T_APP_LOGIN_REQ& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const T_APP_LOGIN_REQ& default_instance();

  void Swap(T_APP_LOGIN_REQ* other);

  // implements Message ----------------------------------------------

  T_APP_LOGIN_REQ* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const T_APP_LOGIN_REQ& from);
  void MergeFrom(const T_APP_LOGIN_REQ& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required fixed64 u64Context = 1;
  inline bool has_u64context() const;
  inline void clear_u64context();
  static const int kU64ContextFieldNumber = 1;
  inline ::google::protobuf::uint64 u64context() const;
  inline void set_u64context(::google::protobuf::uint64 value);

  // required bytes acUserName = 2;
  inline bool has_acusername() const;
  inline void clear_acusername();
  static const int kAcUserNameFieldNumber = 2;
  inline const ::std::string& acusername() const;
  inline void set_acusername(const ::std::string& value);
  inline void set_acusername(const char* value);
  inline void set_acusername(const void* value, size_t size);
  inline ::std::string* mutable_acusername();
  inline ::std::string* release_acusername();
  inline void set_allocated_acusername(::std::string* acusername);

  // required bytes acPasswd = 3;
  inline bool has_acpasswd() const;
  inline void clear_acpasswd();
  static const int kAcPasswdFieldNumber = 3;
  inline const ::std::string& acpasswd() const;
  inline void set_acpasswd(const ::std::string& value);
  inline void set_acpasswd(const char* value);
  inline void set_acpasswd(const void* value, size_t size);
  inline ::std::string* mutable_acpasswd();
  inline ::std::string* release_acpasswd();
  inline void set_allocated_acpasswd(::std::string* acpasswd);

  // @@protoc_insertion_point(class_scope:application.T_APP_LOGIN_REQ)
 private:
  inline void set_has_u64context();
  inline void clear_has_u64context();
  inline void set_has_acusername();
  inline void clear_has_acusername();
  inline void set_has_acpasswd();
  inline void clear_has_acpasswd();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 u64context_;
  ::std::string* acusername_;
  ::std::string* acpasswd_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_application_5fstruct_2eproto();
  friend void protobuf_AssignDesc_application_5fstruct_2eproto();
  friend void protobuf_ShutdownFile_application_5fstruct_2eproto();

  void InitAsDefaultInstance();
  static T_APP_LOGIN_REQ* default_instance_;
};
// -------------------------------------------------------------------

class T_APP_GET_ONLINE_USER_REQ : public ::google::protobuf::Message {
 public:
  T_APP_GET_ONLINE_USER_REQ();
  virtual ~T_APP_GET_ONLINE_USER_REQ();

  T_APP_GET_ONLINE_USER_REQ(const T_APP_GET_ONLINE_USER_REQ& from);

  inline T_APP_GET_ONLINE_USER_REQ& operator=(const T_APP_GET_ONLINE_USER_REQ& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const T_APP_GET_ONLINE_USER_REQ& default_instance();

  void Swap(T_APP_GET_ONLINE_USER_REQ* other);

  // implements Message ----------------------------------------------

  T_APP_GET_ONLINE_USER_REQ* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const T_APP_GET_ONLINE_USER_REQ& from);
  void MergeFrom(const T_APP_GET_ONLINE_USER_REQ& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required fixed64 u64Context = 1;
  inline bool has_u64context() const;
  inline void clear_u64context();
  static const int kU64ContextFieldNumber = 1;
  inline ::google::protobuf::uint64 u64context() const;
  inline void set_u64context(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:application.T_APP_GET_ONLINE_USER_REQ)
 private:
  inline void set_has_u64context();
  inline void clear_has_u64context();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 u64context_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_application_5fstruct_2eproto();
  friend void protobuf_AssignDesc_application_5fstruct_2eproto();
  friend void protobuf_ShutdownFile_application_5fstruct_2eproto();

  void InitAsDefaultInstance();
  static T_APP_GET_ONLINE_USER_REQ* default_instance_;
};
// -------------------------------------------------------------------

class T_APP_REGIST_USER_RSP : public ::google::protobuf::Message {
 public:
  T_APP_REGIST_USER_RSP();
  virtual ~T_APP_REGIST_USER_RSP();

  T_APP_REGIST_USER_RSP(const T_APP_REGIST_USER_RSP& from);

  inline T_APP_REGIST_USER_RSP& operator=(const T_APP_REGIST_USER_RSP& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const T_APP_REGIST_USER_RSP& default_instance();

  void Swap(T_APP_REGIST_USER_RSP* other);

  // implements Message ----------------------------------------------

  T_APP_REGIST_USER_RSP* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const T_APP_REGIST_USER_RSP& from);
  void MergeFrom(const T_APP_REGIST_USER_RSP& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required fixed64 u64Context = 1;
  inline bool has_u64context() const;
  inline void clear_u64context();
  static const int kU64ContextFieldNumber = 1;
  inline ::google::protobuf::uint64 u64context() const;
  inline void set_u64context(::google::protobuf::uint64 value);

  // required fixed32 u32Result = 2;
  inline bool has_u32result() const;
  inline void clear_u32result();
  static const int kU32ResultFieldNumber = 2;
  inline ::google::protobuf::uint32 u32result() const;
  inline void set_u32result(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:application.T_APP_REGIST_USER_RSP)
 private:
  inline void set_has_u64context();
  inline void clear_has_u64context();
  inline void set_has_u32result();
  inline void clear_has_u32result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 u64context_;
  ::google::protobuf::uint32 u32result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_application_5fstruct_2eproto();
  friend void protobuf_AssignDesc_application_5fstruct_2eproto();
  friend void protobuf_ShutdownFile_application_5fstruct_2eproto();

  void InitAsDefaultInstance();
  static T_APP_REGIST_USER_RSP* default_instance_;
};
// -------------------------------------------------------------------

class T_APP_MODIFY_PASSWD_REQ : public ::google::protobuf::Message {
 public:
  T_APP_MODIFY_PASSWD_REQ();
  virtual ~T_APP_MODIFY_PASSWD_REQ();

  T_APP_MODIFY_PASSWD_REQ(const T_APP_MODIFY_PASSWD_REQ& from);

  inline T_APP_MODIFY_PASSWD_REQ& operator=(const T_APP_MODIFY_PASSWD_REQ& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const T_APP_MODIFY_PASSWD_REQ& default_instance();

  void Swap(T_APP_MODIFY_PASSWD_REQ* other);

  // implements Message ----------------------------------------------

  T_APP_MODIFY_PASSWD_REQ* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const T_APP_MODIFY_PASSWD_REQ& from);
  void MergeFrom(const T_APP_MODIFY_PASSWD_REQ& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required fixed64 u64Context = 1;
  inline bool has_u64context() const;
  inline void clear_u64context();
  static const int kU64ContextFieldNumber = 1;
  inline ::google::protobuf::uint64 u64context() const;
  inline void set_u64context(::google::protobuf::uint64 value);

  // required bytes acUserName = 2;
  inline bool has_acusername() const;
  inline void clear_acusername();
  static const int kAcUserNameFieldNumber = 2;
  inline const ::std::string& acusername() const;
  inline void set_acusername(const ::std::string& value);
  inline void set_acusername(const char* value);
  inline void set_acusername(const void* value, size_t size);
  inline ::std::string* mutable_acusername();
  inline ::std::string* release_acusername();
  inline void set_allocated_acusername(::std::string* acusername);

  // required bytes acOldPasswd = 3;
  inline bool has_acoldpasswd() const;
  inline void clear_acoldpasswd();
  static const int kAcOldPasswdFieldNumber = 3;
  inline const ::std::string& acoldpasswd() const;
  inline void set_acoldpasswd(const ::std::string& value);
  inline void set_acoldpasswd(const char* value);
  inline void set_acoldpasswd(const void* value, size_t size);
  inline ::std::string* mutable_acoldpasswd();
  inline ::std::string* release_acoldpasswd();
  inline void set_allocated_acoldpasswd(::std::string* acoldpasswd);

  // required bytes acNewPasswd = 4;
  inline bool has_acnewpasswd() const;
  inline void clear_acnewpasswd();
  static const int kAcNewPasswdFieldNumber = 4;
  inline const ::std::string& acnewpasswd() const;
  inline void set_acnewpasswd(const ::std::string& value);
  inline void set_acnewpasswd(const char* value);
  inline void set_acnewpasswd(const void* value, size_t size);
  inline ::std::string* mutable_acnewpasswd();
  inline ::std::string* release_acnewpasswd();
  inline void set_allocated_acnewpasswd(::std::string* acnewpasswd);

  // @@protoc_insertion_point(class_scope:application.T_APP_MODIFY_PASSWD_REQ)
 private:
  inline void set_has_u64context();
  inline void clear_has_u64context();
  inline void set_has_acusername();
  inline void clear_has_acusername();
  inline void set_has_acoldpasswd();
  inline void clear_has_acoldpasswd();
  inline void set_has_acnewpasswd();
  inline void clear_has_acnewpasswd();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 u64context_;
  ::std::string* acusername_;
  ::std::string* acoldpasswd_;
  ::std::string* acnewpasswd_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_application_5fstruct_2eproto();
  friend void protobuf_AssignDesc_application_5fstruct_2eproto();
  friend void protobuf_ShutdownFile_application_5fstruct_2eproto();

  void InitAsDefaultInstance();
  static T_APP_MODIFY_PASSWD_REQ* default_instance_;
};
// -------------------------------------------------------------------

class T_APP_SEND_MESSAGE_REQ : public ::google::protobuf::Message {
 public:
  T_APP_SEND_MESSAGE_REQ();
  virtual ~T_APP_SEND_MESSAGE_REQ();

  T_APP_SEND_MESSAGE_REQ(const T_APP_SEND_MESSAGE_REQ& from);

  inline T_APP_SEND_MESSAGE_REQ& operator=(const T_APP_SEND_MESSAGE_REQ& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const T_APP_SEND_MESSAGE_REQ& default_instance();

  void Swap(T_APP_SEND_MESSAGE_REQ* other);

  // implements Message ----------------------------------------------

  T_APP_SEND_MESSAGE_REQ* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const T_APP_SEND_MESSAGE_REQ& from);
  void MergeFrom(const T_APP_SEND_MESSAGE_REQ& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required fixed64 u64Context = 1;
  inline bool has_u64context() const;
  inline void clear_u64context();
  static const int kU64ContextFieldNumber = 1;
  inline ::google::protobuf::uint64 u64context() const;
  inline void set_u64context(::google::protobuf::uint64 value);

  // required bytes acObjID = 2;
  inline bool has_acobjid() const;
  inline void clear_acobjid();
  static const int kAcObjIDFieldNumber = 2;
  inline const ::std::string& acobjid() const;
  inline void set_acobjid(const ::std::string& value);
  inline void set_acobjid(const char* value);
  inline void set_acobjid(const void* value, size_t size);
  inline ::std::string* mutable_acobjid();
  inline ::std::string* release_acobjid();
  inline void set_allocated_acobjid(::std::string* acobjid);

  // required bytes acMessage = 3;
  inline bool has_acmessage() const;
  inline void clear_acmessage();
  static const int kAcMessageFieldNumber = 3;
  inline const ::std::string& acmessage() const;
  inline void set_acmessage(const ::std::string& value);
  inline void set_acmessage(const char* value);
  inline void set_acmessage(const void* value, size_t size);
  inline ::std::string* mutable_acmessage();
  inline ::std::string* release_acmessage();
  inline void set_allocated_acmessage(::std::string* acmessage);

  // @@protoc_insertion_point(class_scope:application.T_APP_SEND_MESSAGE_REQ)
 private:
  inline void set_has_u64context();
  inline void clear_has_u64context();
  inline void set_has_acobjid();
  inline void clear_has_acobjid();
  inline void set_has_acmessage();
  inline void clear_has_acmessage();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 u64context_;
  ::std::string* acobjid_;
  ::std::string* acmessage_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_application_5fstruct_2eproto();
  friend void protobuf_AssignDesc_application_5fstruct_2eproto();
  friend void protobuf_ShutdownFile_application_5fstruct_2eproto();

  void InitAsDefaultInstance();
  static T_APP_SEND_MESSAGE_REQ* default_instance_;
};
// -------------------------------------------------------------------

class T_APP_MODIFY_PASSWD_RSP : public ::google::protobuf::Message {
 public:
  T_APP_MODIFY_PASSWD_RSP();
  virtual ~T_APP_MODIFY_PASSWD_RSP();

  T_APP_MODIFY_PASSWD_RSP(const T_APP_MODIFY_PASSWD_RSP& from);

  inline T_APP_MODIFY_PASSWD_RSP& operator=(const T_APP_MODIFY_PASSWD_RSP& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const T_APP_MODIFY_PASSWD_RSP& default_instance();

  void Swap(T_APP_MODIFY_PASSWD_RSP* other);

  // implements Message ----------------------------------------------

  T_APP_MODIFY_PASSWD_RSP* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const T_APP_MODIFY_PASSWD_RSP& from);
  void MergeFrom(const T_APP_MODIFY_PASSWD_RSP& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required fixed64 u64Context = 1;
  inline bool has_u64context() const;
  inline void clear_u64context();
  static const int kU64ContextFieldNumber = 1;
  inline ::google::protobuf::uint64 u64context() const;
  inline void set_u64context(::google::protobuf::uint64 value);

  // required fixed32 u32Result = 2;
  inline bool has_u32result() const;
  inline void clear_u32result();
  static const int kU32ResultFieldNumber = 2;
  inline ::google::protobuf::uint32 u32result() const;
  inline void set_u32result(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:application.T_APP_MODIFY_PASSWD_RSP)
 private:
  inline void set_has_u64context();
  inline void clear_has_u64context();
  inline void set_has_u32result();
  inline void clear_has_u32result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 u64context_;
  ::google::protobuf::uint32 u32result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_application_5fstruct_2eproto();
  friend void protobuf_AssignDesc_application_5fstruct_2eproto();
  friend void protobuf_ShutdownFile_application_5fstruct_2eproto();

  void InitAsDefaultInstance();
  static T_APP_MODIFY_PASSWD_RSP* default_instance_;
};
// -------------------------------------------------------------------

class T_APP_LOGIN_RSP : public ::google::protobuf::Message {
 public:
  T_APP_LOGIN_RSP();
  virtual ~T_APP_LOGIN_RSP();

  T_APP_LOGIN_RSP(const T_APP_LOGIN_RSP& from);

  inline T_APP_LOGIN_RSP& operator=(const T_APP_LOGIN_RSP& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const T_APP_LOGIN_RSP& default_instance();

  void Swap(T_APP_LOGIN_RSP* other);

  // implements Message ----------------------------------------------

  T_APP_LOGIN_RSP* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const T_APP_LOGIN_RSP& from);
  void MergeFrom(const T_APP_LOGIN_RSP& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required fixed64 u64Context = 1;
  inline bool has_u64context() const;
  inline void clear_u64context();
  static const int kU64ContextFieldNumber = 1;
  inline ::google::protobuf::uint64 u64context() const;
  inline void set_u64context(::google::protobuf::uint64 value);

  // required fixed32 u32Result = 2;
  inline bool has_u32result() const;
  inline void clear_u32result();
  static const int kU32ResultFieldNumber = 2;
  inline ::google::protobuf::uint32 u32result() const;
  inline void set_u32result(::google::protobuf::uint32 value);

  // required bytes acUserName = 3;
  inline bool has_acusername() const;
  inline void clear_acusername();
  static const int kAcUserNameFieldNumber = 3;
  inline const ::std::string& acusername() const;
  inline void set_acusername(const ::std::string& value);
  inline void set_acusername(const char* value);
  inline void set_acusername(const void* value, size_t size);
  inline ::std::string* mutable_acusername();
  inline ::std::string* release_acusername();
  inline void set_allocated_acusername(::std::string* acusername);

  // @@protoc_insertion_point(class_scope:application.T_APP_LOGIN_RSP)
 private:
  inline void set_has_u64context();
  inline void clear_has_u64context();
  inline void set_has_u32result();
  inline void clear_has_u32result();
  inline void set_has_acusername();
  inline void clear_has_acusername();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 u64context_;
  ::std::string* acusername_;
  ::google::protobuf::uint32 u32result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_application_5fstruct_2eproto();
  friend void protobuf_AssignDesc_application_5fstruct_2eproto();
  friend void protobuf_ShutdownFile_application_5fstruct_2eproto();

  void InitAsDefaultInstance();
  static T_APP_LOGIN_RSP* default_instance_;
};
// -------------------------------------------------------------------

class T_APP_UPDATE_ONLINE_USER_NTF : public ::google::protobuf::Message {
 public:
  T_APP_UPDATE_ONLINE_USER_NTF();
  virtual ~T_APP_UPDATE_ONLINE_USER_NTF();

  T_APP_UPDATE_ONLINE_USER_NTF(const T_APP_UPDATE_ONLINE_USER_NTF& from);

  inline T_APP_UPDATE_ONLINE_USER_NTF& operator=(const T_APP_UPDATE_ONLINE_USER_NTF& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const T_APP_UPDATE_ONLINE_USER_NTF& default_instance();

  void Swap(T_APP_UPDATE_ONLINE_USER_NTF* other);

  // implements Message ----------------------------------------------

  T_APP_UPDATE_ONLINE_USER_NTF* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const T_APP_UPDATE_ONLINE_USER_NTF& from);
  void MergeFrom(const T_APP_UPDATE_ONLINE_USER_NTF& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required fixed32 u32UserNum = 1;
  inline bool has_u32usernum() const;
  inline void clear_u32usernum();
  static const int kU32UserNumFieldNumber = 1;
  inline ::google::protobuf::uint32 u32usernum() const;
  inline void set_u32usernum(::google::protobuf::uint32 value);

  // repeated .general.T_GNRL_ONLINE_USER atOnlineUser = 2;
  inline int atonlineuser_size() const;
  inline void clear_atonlineuser();
  static const int kAtOnlineUserFieldNumber = 2;
  inline const ::general::T_GNRL_ONLINE_USER& atonlineuser(int index) const;
  inline ::general::T_GNRL_ONLINE_USER* mutable_atonlineuser(int index);
  inline ::general::T_GNRL_ONLINE_USER* add_atonlineuser();
  inline const ::google::protobuf::RepeatedPtrField< ::general::T_GNRL_ONLINE_USER >&
      atonlineuser() const;
  inline ::google::protobuf::RepeatedPtrField< ::general::T_GNRL_ONLINE_USER >*
      mutable_atonlineuser();

  // @@protoc_insertion_point(class_scope:application.T_APP_UPDATE_ONLINE_USER_NTF)
 private:
  inline void set_has_u32usernum();
  inline void clear_has_u32usernum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::general::T_GNRL_ONLINE_USER > atonlineuser_;
  ::google::protobuf::uint32 u32usernum_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_application_5fstruct_2eproto();
  friend void protobuf_AssignDesc_application_5fstruct_2eproto();
  friend void protobuf_ShutdownFile_application_5fstruct_2eproto();

  void InitAsDefaultInstance();
  static T_APP_UPDATE_ONLINE_USER_NTF* default_instance_;
};
// -------------------------------------------------------------------

class T_APP_TRANSMIT_MESSAGE_ACT : public ::google::protobuf::Message {
 public:
  T_APP_TRANSMIT_MESSAGE_ACT();
  virtual ~T_APP_TRANSMIT_MESSAGE_ACT();

  T_APP_TRANSMIT_MESSAGE_ACT(const T_APP_TRANSMIT_MESSAGE_ACT& from);

  inline T_APP_TRANSMIT_MESSAGE_ACT& operator=(const T_APP_TRANSMIT_MESSAGE_ACT& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const T_APP_TRANSMIT_MESSAGE_ACT& default_instance();

  void Swap(T_APP_TRANSMIT_MESSAGE_ACT* other);

  // implements Message ----------------------------------------------

  T_APP_TRANSMIT_MESSAGE_ACT* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const T_APP_TRANSMIT_MESSAGE_ACT& from);
  void MergeFrom(const T_APP_TRANSMIT_MESSAGE_ACT& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes acFrmID = 1;
  inline bool has_acfrmid() const;
  inline void clear_acfrmid();
  static const int kAcFrmIDFieldNumber = 1;
  inline const ::std::string& acfrmid() const;
  inline void set_acfrmid(const ::std::string& value);
  inline void set_acfrmid(const char* value);
  inline void set_acfrmid(const void* value, size_t size);
  inline ::std::string* mutable_acfrmid();
  inline ::std::string* release_acfrmid();
  inline void set_allocated_acfrmid(::std::string* acfrmid);

  // required bytes acMessage = 2;
  inline bool has_acmessage() const;
  inline void clear_acmessage();
  static const int kAcMessageFieldNumber = 2;
  inline const ::std::string& acmessage() const;
  inline void set_acmessage(const ::std::string& value);
  inline void set_acmessage(const char* value);
  inline void set_acmessage(const void* value, size_t size);
  inline ::std::string* mutable_acmessage();
  inline ::std::string* release_acmessage();
  inline void set_allocated_acmessage(::std::string* acmessage);

  // @@protoc_insertion_point(class_scope:application.T_APP_TRANSMIT_MESSAGE_ACT)
 private:
  inline void set_has_acfrmid();
  inline void clear_has_acfrmid();
  inline void set_has_acmessage();
  inline void clear_has_acmessage();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* acfrmid_;
  ::std::string* acmessage_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_application_5fstruct_2eproto();
  friend void protobuf_AssignDesc_application_5fstruct_2eproto();
  friend void protobuf_ShutdownFile_application_5fstruct_2eproto();

  void InitAsDefaultInstance();
  static T_APP_TRANSMIT_MESSAGE_ACT* default_instance_;
};
// -------------------------------------------------------------------

class T_APP_SEND_MESSAGE_RSP : public ::google::protobuf::Message {
 public:
  T_APP_SEND_MESSAGE_RSP();
  virtual ~T_APP_SEND_MESSAGE_RSP();

  T_APP_SEND_MESSAGE_RSP(const T_APP_SEND_MESSAGE_RSP& from);

  inline T_APP_SEND_MESSAGE_RSP& operator=(const T_APP_SEND_MESSAGE_RSP& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const T_APP_SEND_MESSAGE_RSP& default_instance();

  void Swap(T_APP_SEND_MESSAGE_RSP* other);

  // implements Message ----------------------------------------------

  T_APP_SEND_MESSAGE_RSP* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const T_APP_SEND_MESSAGE_RSP& from);
  void MergeFrom(const T_APP_SEND_MESSAGE_RSP& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required fixed64 u64Context = 1;
  inline bool has_u64context() const;
  inline void clear_u64context();
  static const int kU64ContextFieldNumber = 1;
  inline ::google::protobuf::uint64 u64context() const;
  inline void set_u64context(::google::protobuf::uint64 value);

  // required fixed32 u32Result = 2;
  inline bool has_u32result() const;
  inline void clear_u32result();
  static const int kU32ResultFieldNumber = 2;
  inline ::google::protobuf::uint32 u32result() const;
  inline void set_u32result(::google::protobuf::uint32 value);

  // required bytes acObjID = 3;
  inline bool has_acobjid() const;
  inline void clear_acobjid();
  static const int kAcObjIDFieldNumber = 3;
  inline const ::std::string& acobjid() const;
  inline void set_acobjid(const ::std::string& value);
  inline void set_acobjid(const char* value);
  inline void set_acobjid(const void* value, size_t size);
  inline ::std::string* mutable_acobjid();
  inline ::std::string* release_acobjid();
  inline void set_allocated_acobjid(::std::string* acobjid);

  // @@protoc_insertion_point(class_scope:application.T_APP_SEND_MESSAGE_RSP)
 private:
  inline void set_has_u64context();
  inline void clear_has_u64context();
  inline void set_has_u32result();
  inline void clear_has_u32result();
  inline void set_has_acobjid();
  inline void clear_has_acobjid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 u64context_;
  ::std::string* acobjid_;
  ::google::protobuf::uint32 u32result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_application_5fstruct_2eproto();
  friend void protobuf_AssignDesc_application_5fstruct_2eproto();
  friend void protobuf_ShutdownFile_application_5fstruct_2eproto();

  void InitAsDefaultInstance();
  static T_APP_SEND_MESSAGE_RSP* default_instance_;
};
// -------------------------------------------------------------------

class T_APP_REGIST_USER_REQ : public ::google::protobuf::Message {
 public:
  T_APP_REGIST_USER_REQ();
  virtual ~T_APP_REGIST_USER_REQ();

  T_APP_REGIST_USER_REQ(const T_APP_REGIST_USER_REQ& from);

  inline T_APP_REGIST_USER_REQ& operator=(const T_APP_REGIST_USER_REQ& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const T_APP_REGIST_USER_REQ& default_instance();

  void Swap(T_APP_REGIST_USER_REQ* other);

  // implements Message ----------------------------------------------

  T_APP_REGIST_USER_REQ* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const T_APP_REGIST_USER_REQ& from);
  void MergeFrom(const T_APP_REGIST_USER_REQ& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required fixed64 u64Context = 1;
  inline bool has_u64context() const;
  inline void clear_u64context();
  static const int kU64ContextFieldNumber = 1;
  inline ::google::protobuf::uint64 u64context() const;
  inline void set_u64context(::google::protobuf::uint64 value);

  // required bytes acUserName = 2;
  inline bool has_acusername() const;
  inline void clear_acusername();
  static const int kAcUserNameFieldNumber = 2;
  inline const ::std::string& acusername() const;
  inline void set_acusername(const ::std::string& value);
  inline void set_acusername(const char* value);
  inline void set_acusername(const void* value, size_t size);
  inline ::std::string* mutable_acusername();
  inline ::std::string* release_acusername();
  inline void set_allocated_acusername(::std::string* acusername);

  // required bytes acPasswd = 3;
  inline bool has_acpasswd() const;
  inline void clear_acpasswd();
  static const int kAcPasswdFieldNumber = 3;
  inline const ::std::string& acpasswd() const;
  inline void set_acpasswd(const ::std::string& value);
  inline void set_acpasswd(const char* value);
  inline void set_acpasswd(const void* value, size_t size);
  inline ::std::string* mutable_acpasswd();
  inline ::std::string* release_acpasswd();
  inline void set_allocated_acpasswd(::std::string* acpasswd);

  // required fixed32 u32Sex = 4;
  inline bool has_u32sex() const;
  inline void clear_u32sex();
  static const int kU32SexFieldNumber = 4;
  inline ::google::protobuf::uint32 u32sex() const;
  inline void set_u32sex(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:application.T_APP_REGIST_USER_REQ)
 private:
  inline void set_has_u64context();
  inline void clear_has_u64context();
  inline void set_has_acusername();
  inline void clear_has_acusername();
  inline void set_has_acpasswd();
  inline void clear_has_acpasswd();
  inline void set_has_u32sex();
  inline void clear_has_u32sex();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 u64context_;
  ::std::string* acusername_;
  ::std::string* acpasswd_;
  ::google::protobuf::uint32 u32sex_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_application_5fstruct_2eproto();
  friend void protobuf_AssignDesc_application_5fstruct_2eproto();
  friend void protobuf_ShutdownFile_application_5fstruct_2eproto();

  void InitAsDefaultInstance();
  static T_APP_REGIST_USER_REQ* default_instance_;
};
// -------------------------------------------------------------------

class T_APP_GET_ONLINE_USER_RSP : public ::google::protobuf::Message {
 public:
  T_APP_GET_ONLINE_USER_RSP();
  virtual ~T_APP_GET_ONLINE_USER_RSP();

  T_APP_GET_ONLINE_USER_RSP(const T_APP_GET_ONLINE_USER_RSP& from);

  inline T_APP_GET_ONLINE_USER_RSP& operator=(const T_APP_GET_ONLINE_USER_RSP& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const T_APP_GET_ONLINE_USER_RSP& default_instance();

  void Swap(T_APP_GET_ONLINE_USER_RSP* other);

  // implements Message ----------------------------------------------

  T_APP_GET_ONLINE_USER_RSP* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const T_APP_GET_ONLINE_USER_RSP& from);
  void MergeFrom(const T_APP_GET_ONLINE_USER_RSP& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required fixed64 u64Context = 1;
  inline bool has_u64context() const;
  inline void clear_u64context();
  static const int kU64ContextFieldNumber = 1;
  inline ::google::protobuf::uint64 u64context() const;
  inline void set_u64context(::google::protobuf::uint64 value);

  // required fixed32 u32Result = 2;
  inline bool has_u32result() const;
  inline void clear_u32result();
  static const int kU32ResultFieldNumber = 2;
  inline ::google::protobuf::uint32 u32result() const;
  inline void set_u32result(::google::protobuf::uint32 value);

  // required fixed32 u32UserNum = 3;
  inline bool has_u32usernum() const;
  inline void clear_u32usernum();
  static const int kU32UserNumFieldNumber = 3;
  inline ::google::protobuf::uint32 u32usernum() const;
  inline void set_u32usernum(::google::protobuf::uint32 value);

  // repeated .general.T_GNRL_ONLINE_USER atOnlineUser = 4;
  inline int atonlineuser_size() const;
  inline void clear_atonlineuser();
  static const int kAtOnlineUserFieldNumber = 4;
  inline const ::general::T_GNRL_ONLINE_USER& atonlineuser(int index) const;
  inline ::general::T_GNRL_ONLINE_USER* mutable_atonlineuser(int index);
  inline ::general::T_GNRL_ONLINE_USER* add_atonlineuser();
  inline const ::google::protobuf::RepeatedPtrField< ::general::T_GNRL_ONLINE_USER >&
      atonlineuser() const;
  inline ::google::protobuf::RepeatedPtrField< ::general::T_GNRL_ONLINE_USER >*
      mutable_atonlineuser();

  // @@protoc_insertion_point(class_scope:application.T_APP_GET_ONLINE_USER_RSP)
 private:
  inline void set_has_u64context();
  inline void clear_has_u64context();
  inline void set_has_u32result();
  inline void clear_has_u32result();
  inline void set_has_u32usernum();
  inline void clear_has_u32usernum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 u64context_;
  ::google::protobuf::uint32 u32result_;
  ::google::protobuf::uint32 u32usernum_;
  ::google::protobuf::RepeatedPtrField< ::general::T_GNRL_ONLINE_USER > atonlineuser_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_application_5fstruct_2eproto();
  friend void protobuf_AssignDesc_application_5fstruct_2eproto();
  friend void protobuf_ShutdownFile_application_5fstruct_2eproto();

  void InitAsDefaultInstance();
  static T_APP_GET_ONLINE_USER_RSP* default_instance_;
};
// ===================================================================


// ===================================================================

// T_APP_LOGIN_REQ

// required fixed64 u64Context = 1;
inline bool T_APP_LOGIN_REQ::has_u64context() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void T_APP_LOGIN_REQ::set_has_u64context() {
  _has_bits_[0] |= 0x00000001u;
}
inline void T_APP_LOGIN_REQ::clear_has_u64context() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void T_APP_LOGIN_REQ::clear_u64context() {
  u64context_ = GOOGLE_ULONGLONG(0);
  clear_has_u64context();
}
inline ::google::protobuf::uint64 T_APP_LOGIN_REQ::u64context() const {
  return u64context_;
}
inline void T_APP_LOGIN_REQ::set_u64context(::google::protobuf::uint64 value) {
  set_has_u64context();
  u64context_ = value;
}

// required bytes acUserName = 2;
inline bool T_APP_LOGIN_REQ::has_acusername() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void T_APP_LOGIN_REQ::set_has_acusername() {
  _has_bits_[0] |= 0x00000002u;
}
inline void T_APP_LOGIN_REQ::clear_has_acusername() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void T_APP_LOGIN_REQ::clear_acusername() {
  if (acusername_ != &::google::protobuf::internal::kEmptyString) {
    acusername_->clear();
  }
  clear_has_acusername();
}
inline const ::std::string& T_APP_LOGIN_REQ::acusername() const {
  return *acusername_;
}
inline void T_APP_LOGIN_REQ::set_acusername(const ::std::string& value) {
  set_has_acusername();
  if (acusername_ == &::google::protobuf::internal::kEmptyString) {
    acusername_ = new ::std::string;
  }
  acusername_->assign(value);
}
inline void T_APP_LOGIN_REQ::set_acusername(const char* value) {
  set_has_acusername();
  if (acusername_ == &::google::protobuf::internal::kEmptyString) {
    acusername_ = new ::std::string;
  }
  acusername_->assign(value);
}
inline void T_APP_LOGIN_REQ::set_acusername(const void* value, size_t size) {
  set_has_acusername();
  if (acusername_ == &::google::protobuf::internal::kEmptyString) {
    acusername_ = new ::std::string;
  }
  acusername_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* T_APP_LOGIN_REQ::mutable_acusername() {
  set_has_acusername();
  if (acusername_ == &::google::protobuf::internal::kEmptyString) {
    acusername_ = new ::std::string;
  }
  return acusername_;
}
inline ::std::string* T_APP_LOGIN_REQ::release_acusername() {
  clear_has_acusername();
  if (acusername_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = acusername_;
    acusername_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void T_APP_LOGIN_REQ::set_allocated_acusername(::std::string* acusername) {
  if (acusername_ != &::google::protobuf::internal::kEmptyString) {
    delete acusername_;
  }
  if (acusername) {
    set_has_acusername();
    acusername_ = acusername;
  } else {
    clear_has_acusername();
    acusername_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required bytes acPasswd = 3;
inline bool T_APP_LOGIN_REQ::has_acpasswd() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void T_APP_LOGIN_REQ::set_has_acpasswd() {
  _has_bits_[0] |= 0x00000004u;
}
inline void T_APP_LOGIN_REQ::clear_has_acpasswd() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void T_APP_LOGIN_REQ::clear_acpasswd() {
  if (acpasswd_ != &::google::protobuf::internal::kEmptyString) {
    acpasswd_->clear();
  }
  clear_has_acpasswd();
}
inline const ::std::string& T_APP_LOGIN_REQ::acpasswd() const {
  return *acpasswd_;
}
inline void T_APP_LOGIN_REQ::set_acpasswd(const ::std::string& value) {
  set_has_acpasswd();
  if (acpasswd_ == &::google::protobuf::internal::kEmptyString) {
    acpasswd_ = new ::std::string;
  }
  acpasswd_->assign(value);
}
inline void T_APP_LOGIN_REQ::set_acpasswd(const char* value) {
  set_has_acpasswd();
  if (acpasswd_ == &::google::protobuf::internal::kEmptyString) {
    acpasswd_ = new ::std::string;
  }
  acpasswd_->assign(value);
}
inline void T_APP_LOGIN_REQ::set_acpasswd(const void* value, size_t size) {
  set_has_acpasswd();
  if (acpasswd_ == &::google::protobuf::internal::kEmptyString) {
    acpasswd_ = new ::std::string;
  }
  acpasswd_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* T_APP_LOGIN_REQ::mutable_acpasswd() {
  set_has_acpasswd();
  if (acpasswd_ == &::google::protobuf::internal::kEmptyString) {
    acpasswd_ = new ::std::string;
  }
  return acpasswd_;
}
inline ::std::string* T_APP_LOGIN_REQ::release_acpasswd() {
  clear_has_acpasswd();
  if (acpasswd_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = acpasswd_;
    acpasswd_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void T_APP_LOGIN_REQ::set_allocated_acpasswd(::std::string* acpasswd) {
  if (acpasswd_ != &::google::protobuf::internal::kEmptyString) {
    delete acpasswd_;
  }
  if (acpasswd) {
    set_has_acpasswd();
    acpasswd_ = acpasswd;
  } else {
    clear_has_acpasswd();
    acpasswd_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// T_APP_GET_ONLINE_USER_REQ

// required fixed64 u64Context = 1;
inline bool T_APP_GET_ONLINE_USER_REQ::has_u64context() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void T_APP_GET_ONLINE_USER_REQ::set_has_u64context() {
  _has_bits_[0] |= 0x00000001u;
}
inline void T_APP_GET_ONLINE_USER_REQ::clear_has_u64context() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void T_APP_GET_ONLINE_USER_REQ::clear_u64context() {
  u64context_ = GOOGLE_ULONGLONG(0);
  clear_has_u64context();
}
inline ::google::protobuf::uint64 T_APP_GET_ONLINE_USER_REQ::u64context() const {
  return u64context_;
}
inline void T_APP_GET_ONLINE_USER_REQ::set_u64context(::google::protobuf::uint64 value) {
  set_has_u64context();
  u64context_ = value;
}

// -------------------------------------------------------------------

// T_APP_REGIST_USER_RSP

// required fixed64 u64Context = 1;
inline bool T_APP_REGIST_USER_RSP::has_u64context() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void T_APP_REGIST_USER_RSP::set_has_u64context() {
  _has_bits_[0] |= 0x00000001u;
}
inline void T_APP_REGIST_USER_RSP::clear_has_u64context() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void T_APP_REGIST_USER_RSP::clear_u64context() {
  u64context_ = GOOGLE_ULONGLONG(0);
  clear_has_u64context();
}
inline ::google::protobuf::uint64 T_APP_REGIST_USER_RSP::u64context() const {
  return u64context_;
}
inline void T_APP_REGIST_USER_RSP::set_u64context(::google::protobuf::uint64 value) {
  set_has_u64context();
  u64context_ = value;
}

// required fixed32 u32Result = 2;
inline bool T_APP_REGIST_USER_RSP::has_u32result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void T_APP_REGIST_USER_RSP::set_has_u32result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void T_APP_REGIST_USER_RSP::clear_has_u32result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void T_APP_REGIST_USER_RSP::clear_u32result() {
  u32result_ = 0u;
  clear_has_u32result();
}
inline ::google::protobuf::uint32 T_APP_REGIST_USER_RSP::u32result() const {
  return u32result_;
}
inline void T_APP_REGIST_USER_RSP::set_u32result(::google::protobuf::uint32 value) {
  set_has_u32result();
  u32result_ = value;
}

// -------------------------------------------------------------------

// T_APP_MODIFY_PASSWD_REQ

// required fixed64 u64Context = 1;
inline bool T_APP_MODIFY_PASSWD_REQ::has_u64context() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void T_APP_MODIFY_PASSWD_REQ::set_has_u64context() {
  _has_bits_[0] |= 0x00000001u;
}
inline void T_APP_MODIFY_PASSWD_REQ::clear_has_u64context() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void T_APP_MODIFY_PASSWD_REQ::clear_u64context() {
  u64context_ = GOOGLE_ULONGLONG(0);
  clear_has_u64context();
}
inline ::google::protobuf::uint64 T_APP_MODIFY_PASSWD_REQ::u64context() const {
  return u64context_;
}
inline void T_APP_MODIFY_PASSWD_REQ::set_u64context(::google::protobuf::uint64 value) {
  set_has_u64context();
  u64context_ = value;
}

// required bytes acUserName = 2;
inline bool T_APP_MODIFY_PASSWD_REQ::has_acusername() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void T_APP_MODIFY_PASSWD_REQ::set_has_acusername() {
  _has_bits_[0] |= 0x00000002u;
}
inline void T_APP_MODIFY_PASSWD_REQ::clear_has_acusername() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void T_APP_MODIFY_PASSWD_REQ::clear_acusername() {
  if (acusername_ != &::google::protobuf::internal::kEmptyString) {
    acusername_->clear();
  }
  clear_has_acusername();
}
inline const ::std::string& T_APP_MODIFY_PASSWD_REQ::acusername() const {
  return *acusername_;
}
inline void T_APP_MODIFY_PASSWD_REQ::set_acusername(const ::std::string& value) {
  set_has_acusername();
  if (acusername_ == &::google::protobuf::internal::kEmptyString) {
    acusername_ = new ::std::string;
  }
  acusername_->assign(value);
}
inline void T_APP_MODIFY_PASSWD_REQ::set_acusername(const char* value) {
  set_has_acusername();
  if (acusername_ == &::google::protobuf::internal::kEmptyString) {
    acusername_ = new ::std::string;
  }
  acusername_->assign(value);
}
inline void T_APP_MODIFY_PASSWD_REQ::set_acusername(const void* value, size_t size) {
  set_has_acusername();
  if (acusername_ == &::google::protobuf::internal::kEmptyString) {
    acusername_ = new ::std::string;
  }
  acusername_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* T_APP_MODIFY_PASSWD_REQ::mutable_acusername() {
  set_has_acusername();
  if (acusername_ == &::google::protobuf::internal::kEmptyString) {
    acusername_ = new ::std::string;
  }
  return acusername_;
}
inline ::std::string* T_APP_MODIFY_PASSWD_REQ::release_acusername() {
  clear_has_acusername();
  if (acusername_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = acusername_;
    acusername_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void T_APP_MODIFY_PASSWD_REQ::set_allocated_acusername(::std::string* acusername) {
  if (acusername_ != &::google::protobuf::internal::kEmptyString) {
    delete acusername_;
  }
  if (acusername) {
    set_has_acusername();
    acusername_ = acusername;
  } else {
    clear_has_acusername();
    acusername_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required bytes acOldPasswd = 3;
inline bool T_APP_MODIFY_PASSWD_REQ::has_acoldpasswd() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void T_APP_MODIFY_PASSWD_REQ::set_has_acoldpasswd() {
  _has_bits_[0] |= 0x00000004u;
}
inline void T_APP_MODIFY_PASSWD_REQ::clear_has_acoldpasswd() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void T_APP_MODIFY_PASSWD_REQ::clear_acoldpasswd() {
  if (acoldpasswd_ != &::google::protobuf::internal::kEmptyString) {
    acoldpasswd_->clear();
  }
  clear_has_acoldpasswd();
}
inline const ::std::string& T_APP_MODIFY_PASSWD_REQ::acoldpasswd() const {
  return *acoldpasswd_;
}
inline void T_APP_MODIFY_PASSWD_REQ::set_acoldpasswd(const ::std::string& value) {
  set_has_acoldpasswd();
  if (acoldpasswd_ == &::google::protobuf::internal::kEmptyString) {
    acoldpasswd_ = new ::std::string;
  }
  acoldpasswd_->assign(value);
}
inline void T_APP_MODIFY_PASSWD_REQ::set_acoldpasswd(const char* value) {
  set_has_acoldpasswd();
  if (acoldpasswd_ == &::google::protobuf::internal::kEmptyString) {
    acoldpasswd_ = new ::std::string;
  }
  acoldpasswd_->assign(value);
}
inline void T_APP_MODIFY_PASSWD_REQ::set_acoldpasswd(const void* value, size_t size) {
  set_has_acoldpasswd();
  if (acoldpasswd_ == &::google::protobuf::internal::kEmptyString) {
    acoldpasswd_ = new ::std::string;
  }
  acoldpasswd_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* T_APP_MODIFY_PASSWD_REQ::mutable_acoldpasswd() {
  set_has_acoldpasswd();
  if (acoldpasswd_ == &::google::protobuf::internal::kEmptyString) {
    acoldpasswd_ = new ::std::string;
  }
  return acoldpasswd_;
}
inline ::std::string* T_APP_MODIFY_PASSWD_REQ::release_acoldpasswd() {
  clear_has_acoldpasswd();
  if (acoldpasswd_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = acoldpasswd_;
    acoldpasswd_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void T_APP_MODIFY_PASSWD_REQ::set_allocated_acoldpasswd(::std::string* acoldpasswd) {
  if (acoldpasswd_ != &::google::protobuf::internal::kEmptyString) {
    delete acoldpasswd_;
  }
  if (acoldpasswd) {
    set_has_acoldpasswd();
    acoldpasswd_ = acoldpasswd;
  } else {
    clear_has_acoldpasswd();
    acoldpasswd_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required bytes acNewPasswd = 4;
inline bool T_APP_MODIFY_PASSWD_REQ::has_acnewpasswd() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void T_APP_MODIFY_PASSWD_REQ::set_has_acnewpasswd() {
  _has_bits_[0] |= 0x00000008u;
}
inline void T_APP_MODIFY_PASSWD_REQ::clear_has_acnewpasswd() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void T_APP_MODIFY_PASSWD_REQ::clear_acnewpasswd() {
  if (acnewpasswd_ != &::google::protobuf::internal::kEmptyString) {
    acnewpasswd_->clear();
  }
  clear_has_acnewpasswd();
}
inline const ::std::string& T_APP_MODIFY_PASSWD_REQ::acnewpasswd() const {
  return *acnewpasswd_;
}
inline void T_APP_MODIFY_PASSWD_REQ::set_acnewpasswd(const ::std::string& value) {
  set_has_acnewpasswd();
  if (acnewpasswd_ == &::google::protobuf::internal::kEmptyString) {
    acnewpasswd_ = new ::std::string;
  }
  acnewpasswd_->assign(value);
}
inline void T_APP_MODIFY_PASSWD_REQ::set_acnewpasswd(const char* value) {
  set_has_acnewpasswd();
  if (acnewpasswd_ == &::google::protobuf::internal::kEmptyString) {
    acnewpasswd_ = new ::std::string;
  }
  acnewpasswd_->assign(value);
}
inline void T_APP_MODIFY_PASSWD_REQ::set_acnewpasswd(const void* value, size_t size) {
  set_has_acnewpasswd();
  if (acnewpasswd_ == &::google::protobuf::internal::kEmptyString) {
    acnewpasswd_ = new ::std::string;
  }
  acnewpasswd_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* T_APP_MODIFY_PASSWD_REQ::mutable_acnewpasswd() {
  set_has_acnewpasswd();
  if (acnewpasswd_ == &::google::protobuf::internal::kEmptyString) {
    acnewpasswd_ = new ::std::string;
  }
  return acnewpasswd_;
}
inline ::std::string* T_APP_MODIFY_PASSWD_REQ::release_acnewpasswd() {
  clear_has_acnewpasswd();
  if (acnewpasswd_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = acnewpasswd_;
    acnewpasswd_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void T_APP_MODIFY_PASSWD_REQ::set_allocated_acnewpasswd(::std::string* acnewpasswd) {
  if (acnewpasswd_ != &::google::protobuf::internal::kEmptyString) {
    delete acnewpasswd_;
  }
  if (acnewpasswd) {
    set_has_acnewpasswd();
    acnewpasswd_ = acnewpasswd;
  } else {
    clear_has_acnewpasswd();
    acnewpasswd_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// T_APP_SEND_MESSAGE_REQ

// required fixed64 u64Context = 1;
inline bool T_APP_SEND_MESSAGE_REQ::has_u64context() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void T_APP_SEND_MESSAGE_REQ::set_has_u64context() {
  _has_bits_[0] |= 0x00000001u;
}
inline void T_APP_SEND_MESSAGE_REQ::clear_has_u64context() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void T_APP_SEND_MESSAGE_REQ::clear_u64context() {
  u64context_ = GOOGLE_ULONGLONG(0);
  clear_has_u64context();
}
inline ::google::protobuf::uint64 T_APP_SEND_MESSAGE_REQ::u64context() const {
  return u64context_;
}
inline void T_APP_SEND_MESSAGE_REQ::set_u64context(::google::protobuf::uint64 value) {
  set_has_u64context();
  u64context_ = value;
}

// required bytes acObjID = 2;
inline bool T_APP_SEND_MESSAGE_REQ::has_acobjid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void T_APP_SEND_MESSAGE_REQ::set_has_acobjid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void T_APP_SEND_MESSAGE_REQ::clear_has_acobjid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void T_APP_SEND_MESSAGE_REQ::clear_acobjid() {
  if (acobjid_ != &::google::protobuf::internal::kEmptyString) {
    acobjid_->clear();
  }
  clear_has_acobjid();
}
inline const ::std::string& T_APP_SEND_MESSAGE_REQ::acobjid() const {
  return *acobjid_;
}
inline void T_APP_SEND_MESSAGE_REQ::set_acobjid(const ::std::string& value) {
  set_has_acobjid();
  if (acobjid_ == &::google::protobuf::internal::kEmptyString) {
    acobjid_ = new ::std::string;
  }
  acobjid_->assign(value);
}
inline void T_APP_SEND_MESSAGE_REQ::set_acobjid(const char* value) {
  set_has_acobjid();
  if (acobjid_ == &::google::protobuf::internal::kEmptyString) {
    acobjid_ = new ::std::string;
  }
  acobjid_->assign(value);
}
inline void T_APP_SEND_MESSAGE_REQ::set_acobjid(const void* value, size_t size) {
  set_has_acobjid();
  if (acobjid_ == &::google::protobuf::internal::kEmptyString) {
    acobjid_ = new ::std::string;
  }
  acobjid_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* T_APP_SEND_MESSAGE_REQ::mutable_acobjid() {
  set_has_acobjid();
  if (acobjid_ == &::google::protobuf::internal::kEmptyString) {
    acobjid_ = new ::std::string;
  }
  return acobjid_;
}
inline ::std::string* T_APP_SEND_MESSAGE_REQ::release_acobjid() {
  clear_has_acobjid();
  if (acobjid_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = acobjid_;
    acobjid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void T_APP_SEND_MESSAGE_REQ::set_allocated_acobjid(::std::string* acobjid) {
  if (acobjid_ != &::google::protobuf::internal::kEmptyString) {
    delete acobjid_;
  }
  if (acobjid) {
    set_has_acobjid();
    acobjid_ = acobjid;
  } else {
    clear_has_acobjid();
    acobjid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required bytes acMessage = 3;
inline bool T_APP_SEND_MESSAGE_REQ::has_acmessage() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void T_APP_SEND_MESSAGE_REQ::set_has_acmessage() {
  _has_bits_[0] |= 0x00000004u;
}
inline void T_APP_SEND_MESSAGE_REQ::clear_has_acmessage() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void T_APP_SEND_MESSAGE_REQ::clear_acmessage() {
  if (acmessage_ != &::google::protobuf::internal::kEmptyString) {
    acmessage_->clear();
  }
  clear_has_acmessage();
}
inline const ::std::string& T_APP_SEND_MESSAGE_REQ::acmessage() const {
  return *acmessage_;
}
inline void T_APP_SEND_MESSAGE_REQ::set_acmessage(const ::std::string& value) {
  set_has_acmessage();
  if (acmessage_ == &::google::protobuf::internal::kEmptyString) {
    acmessage_ = new ::std::string;
  }
  acmessage_->assign(value);
}
inline void T_APP_SEND_MESSAGE_REQ::set_acmessage(const char* value) {
  set_has_acmessage();
  if (acmessage_ == &::google::protobuf::internal::kEmptyString) {
    acmessage_ = new ::std::string;
  }
  acmessage_->assign(value);
}
inline void T_APP_SEND_MESSAGE_REQ::set_acmessage(const void* value, size_t size) {
  set_has_acmessage();
  if (acmessage_ == &::google::protobuf::internal::kEmptyString) {
    acmessage_ = new ::std::string;
  }
  acmessage_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* T_APP_SEND_MESSAGE_REQ::mutable_acmessage() {
  set_has_acmessage();
  if (acmessage_ == &::google::protobuf::internal::kEmptyString) {
    acmessage_ = new ::std::string;
  }
  return acmessage_;
}
inline ::std::string* T_APP_SEND_MESSAGE_REQ::release_acmessage() {
  clear_has_acmessage();
  if (acmessage_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = acmessage_;
    acmessage_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void T_APP_SEND_MESSAGE_REQ::set_allocated_acmessage(::std::string* acmessage) {
  if (acmessage_ != &::google::protobuf::internal::kEmptyString) {
    delete acmessage_;
  }
  if (acmessage) {
    set_has_acmessage();
    acmessage_ = acmessage;
  } else {
    clear_has_acmessage();
    acmessage_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// T_APP_MODIFY_PASSWD_RSP

// required fixed64 u64Context = 1;
inline bool T_APP_MODIFY_PASSWD_RSP::has_u64context() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void T_APP_MODIFY_PASSWD_RSP::set_has_u64context() {
  _has_bits_[0] |= 0x00000001u;
}
inline void T_APP_MODIFY_PASSWD_RSP::clear_has_u64context() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void T_APP_MODIFY_PASSWD_RSP::clear_u64context() {
  u64context_ = GOOGLE_ULONGLONG(0);
  clear_has_u64context();
}
inline ::google::protobuf::uint64 T_APP_MODIFY_PASSWD_RSP::u64context() const {
  return u64context_;
}
inline void T_APP_MODIFY_PASSWD_RSP::set_u64context(::google::protobuf::uint64 value) {
  set_has_u64context();
  u64context_ = value;
}

// required fixed32 u32Result = 2;
inline bool T_APP_MODIFY_PASSWD_RSP::has_u32result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void T_APP_MODIFY_PASSWD_RSP::set_has_u32result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void T_APP_MODIFY_PASSWD_RSP::clear_has_u32result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void T_APP_MODIFY_PASSWD_RSP::clear_u32result() {
  u32result_ = 0u;
  clear_has_u32result();
}
inline ::google::protobuf::uint32 T_APP_MODIFY_PASSWD_RSP::u32result() const {
  return u32result_;
}
inline void T_APP_MODIFY_PASSWD_RSP::set_u32result(::google::protobuf::uint32 value) {
  set_has_u32result();
  u32result_ = value;
}

// -------------------------------------------------------------------

// T_APP_LOGIN_RSP

// required fixed64 u64Context = 1;
inline bool T_APP_LOGIN_RSP::has_u64context() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void T_APP_LOGIN_RSP::set_has_u64context() {
  _has_bits_[0] |= 0x00000001u;
}
inline void T_APP_LOGIN_RSP::clear_has_u64context() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void T_APP_LOGIN_RSP::clear_u64context() {
  u64context_ = GOOGLE_ULONGLONG(0);
  clear_has_u64context();
}
inline ::google::protobuf::uint64 T_APP_LOGIN_RSP::u64context() const {
  return u64context_;
}
inline void T_APP_LOGIN_RSP::set_u64context(::google::protobuf::uint64 value) {
  set_has_u64context();
  u64context_ = value;
}

// required fixed32 u32Result = 2;
inline bool T_APP_LOGIN_RSP::has_u32result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void T_APP_LOGIN_RSP::set_has_u32result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void T_APP_LOGIN_RSP::clear_has_u32result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void T_APP_LOGIN_RSP::clear_u32result() {
  u32result_ = 0u;
  clear_has_u32result();
}
inline ::google::protobuf::uint32 T_APP_LOGIN_RSP::u32result() const {
  return u32result_;
}
inline void T_APP_LOGIN_RSP::set_u32result(::google::protobuf::uint32 value) {
  set_has_u32result();
  u32result_ = value;
}

// required bytes acUserName = 3;
inline bool T_APP_LOGIN_RSP::has_acusername() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void T_APP_LOGIN_RSP::set_has_acusername() {
  _has_bits_[0] |= 0x00000004u;
}
inline void T_APP_LOGIN_RSP::clear_has_acusername() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void T_APP_LOGIN_RSP::clear_acusername() {
  if (acusername_ != &::google::protobuf::internal::kEmptyString) {
    acusername_->clear();
  }
  clear_has_acusername();
}
inline const ::std::string& T_APP_LOGIN_RSP::acusername() const {
  return *acusername_;
}
inline void T_APP_LOGIN_RSP::set_acusername(const ::std::string& value) {
  set_has_acusername();
  if (acusername_ == &::google::protobuf::internal::kEmptyString) {
    acusername_ = new ::std::string;
  }
  acusername_->assign(value);
}
inline void T_APP_LOGIN_RSP::set_acusername(const char* value) {
  set_has_acusername();
  if (acusername_ == &::google::protobuf::internal::kEmptyString) {
    acusername_ = new ::std::string;
  }
  acusername_->assign(value);
}
inline void T_APP_LOGIN_RSP::set_acusername(const void* value, size_t size) {
  set_has_acusername();
  if (acusername_ == &::google::protobuf::internal::kEmptyString) {
    acusername_ = new ::std::string;
  }
  acusername_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* T_APP_LOGIN_RSP::mutable_acusername() {
  set_has_acusername();
  if (acusername_ == &::google::protobuf::internal::kEmptyString) {
    acusername_ = new ::std::string;
  }
  return acusername_;
}
inline ::std::string* T_APP_LOGIN_RSP::release_acusername() {
  clear_has_acusername();
  if (acusername_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = acusername_;
    acusername_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void T_APP_LOGIN_RSP::set_allocated_acusername(::std::string* acusername) {
  if (acusername_ != &::google::protobuf::internal::kEmptyString) {
    delete acusername_;
  }
  if (acusername) {
    set_has_acusername();
    acusername_ = acusername;
  } else {
    clear_has_acusername();
    acusername_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// T_APP_UPDATE_ONLINE_USER_NTF

// required fixed32 u32UserNum = 1;
inline bool T_APP_UPDATE_ONLINE_USER_NTF::has_u32usernum() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void T_APP_UPDATE_ONLINE_USER_NTF::set_has_u32usernum() {
  _has_bits_[0] |= 0x00000001u;
}
inline void T_APP_UPDATE_ONLINE_USER_NTF::clear_has_u32usernum() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void T_APP_UPDATE_ONLINE_USER_NTF::clear_u32usernum() {
  u32usernum_ = 0u;
  clear_has_u32usernum();
}
inline ::google::protobuf::uint32 T_APP_UPDATE_ONLINE_USER_NTF::u32usernum() const {
  return u32usernum_;
}
inline void T_APP_UPDATE_ONLINE_USER_NTF::set_u32usernum(::google::protobuf::uint32 value) {
  set_has_u32usernum();
  u32usernum_ = value;
}

// repeated .general.T_GNRL_ONLINE_USER atOnlineUser = 2;
inline int T_APP_UPDATE_ONLINE_USER_NTF::atonlineuser_size() const {
  return atonlineuser_.size();
}
inline void T_APP_UPDATE_ONLINE_USER_NTF::clear_atonlineuser() {
  atonlineuser_.Clear();
}
inline const ::general::T_GNRL_ONLINE_USER& T_APP_UPDATE_ONLINE_USER_NTF::atonlineuser(int index) const {
  return atonlineuser_.Get(index);
}
inline ::general::T_GNRL_ONLINE_USER* T_APP_UPDATE_ONLINE_USER_NTF::mutable_atonlineuser(int index) {
  return atonlineuser_.Mutable(index);
}
inline ::general::T_GNRL_ONLINE_USER* T_APP_UPDATE_ONLINE_USER_NTF::add_atonlineuser() {
  return atonlineuser_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::general::T_GNRL_ONLINE_USER >&
T_APP_UPDATE_ONLINE_USER_NTF::atonlineuser() const {
  return atonlineuser_;
}
inline ::google::protobuf::RepeatedPtrField< ::general::T_GNRL_ONLINE_USER >*
T_APP_UPDATE_ONLINE_USER_NTF::mutable_atonlineuser() {
  return &atonlineuser_;
}

// -------------------------------------------------------------------

// T_APP_TRANSMIT_MESSAGE_ACT

// required bytes acFrmID = 1;
inline bool T_APP_TRANSMIT_MESSAGE_ACT::has_acfrmid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void T_APP_TRANSMIT_MESSAGE_ACT::set_has_acfrmid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void T_APP_TRANSMIT_MESSAGE_ACT::clear_has_acfrmid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void T_APP_TRANSMIT_MESSAGE_ACT::clear_acfrmid() {
  if (acfrmid_ != &::google::protobuf::internal::kEmptyString) {
    acfrmid_->clear();
  }
  clear_has_acfrmid();
}
inline const ::std::string& T_APP_TRANSMIT_MESSAGE_ACT::acfrmid() const {
  return *acfrmid_;
}
inline void T_APP_TRANSMIT_MESSAGE_ACT::set_acfrmid(const ::std::string& value) {
  set_has_acfrmid();
  if (acfrmid_ == &::google::protobuf::internal::kEmptyString) {
    acfrmid_ = new ::std::string;
  }
  acfrmid_->assign(value);
}
inline void T_APP_TRANSMIT_MESSAGE_ACT::set_acfrmid(const char* value) {
  set_has_acfrmid();
  if (acfrmid_ == &::google::protobuf::internal::kEmptyString) {
    acfrmid_ = new ::std::string;
  }
  acfrmid_->assign(value);
}
inline void T_APP_TRANSMIT_MESSAGE_ACT::set_acfrmid(const void* value, size_t size) {
  set_has_acfrmid();
  if (acfrmid_ == &::google::protobuf::internal::kEmptyString) {
    acfrmid_ = new ::std::string;
  }
  acfrmid_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* T_APP_TRANSMIT_MESSAGE_ACT::mutable_acfrmid() {
  set_has_acfrmid();
  if (acfrmid_ == &::google::protobuf::internal::kEmptyString) {
    acfrmid_ = new ::std::string;
  }
  return acfrmid_;
}
inline ::std::string* T_APP_TRANSMIT_MESSAGE_ACT::release_acfrmid() {
  clear_has_acfrmid();
  if (acfrmid_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = acfrmid_;
    acfrmid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void T_APP_TRANSMIT_MESSAGE_ACT::set_allocated_acfrmid(::std::string* acfrmid) {
  if (acfrmid_ != &::google::protobuf::internal::kEmptyString) {
    delete acfrmid_;
  }
  if (acfrmid) {
    set_has_acfrmid();
    acfrmid_ = acfrmid;
  } else {
    clear_has_acfrmid();
    acfrmid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required bytes acMessage = 2;
inline bool T_APP_TRANSMIT_MESSAGE_ACT::has_acmessage() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void T_APP_TRANSMIT_MESSAGE_ACT::set_has_acmessage() {
  _has_bits_[0] |= 0x00000002u;
}
inline void T_APP_TRANSMIT_MESSAGE_ACT::clear_has_acmessage() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void T_APP_TRANSMIT_MESSAGE_ACT::clear_acmessage() {
  if (acmessage_ != &::google::protobuf::internal::kEmptyString) {
    acmessage_->clear();
  }
  clear_has_acmessage();
}
inline const ::std::string& T_APP_TRANSMIT_MESSAGE_ACT::acmessage() const {
  return *acmessage_;
}
inline void T_APP_TRANSMIT_MESSAGE_ACT::set_acmessage(const ::std::string& value) {
  set_has_acmessage();
  if (acmessage_ == &::google::protobuf::internal::kEmptyString) {
    acmessage_ = new ::std::string;
  }
  acmessage_->assign(value);
}
inline void T_APP_TRANSMIT_MESSAGE_ACT::set_acmessage(const char* value) {
  set_has_acmessage();
  if (acmessage_ == &::google::protobuf::internal::kEmptyString) {
    acmessage_ = new ::std::string;
  }
  acmessage_->assign(value);
}
inline void T_APP_TRANSMIT_MESSAGE_ACT::set_acmessage(const void* value, size_t size) {
  set_has_acmessage();
  if (acmessage_ == &::google::protobuf::internal::kEmptyString) {
    acmessage_ = new ::std::string;
  }
  acmessage_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* T_APP_TRANSMIT_MESSAGE_ACT::mutable_acmessage() {
  set_has_acmessage();
  if (acmessage_ == &::google::protobuf::internal::kEmptyString) {
    acmessage_ = new ::std::string;
  }
  return acmessage_;
}
inline ::std::string* T_APP_TRANSMIT_MESSAGE_ACT::release_acmessage() {
  clear_has_acmessage();
  if (acmessage_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = acmessage_;
    acmessage_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void T_APP_TRANSMIT_MESSAGE_ACT::set_allocated_acmessage(::std::string* acmessage) {
  if (acmessage_ != &::google::protobuf::internal::kEmptyString) {
    delete acmessage_;
  }
  if (acmessage) {
    set_has_acmessage();
    acmessage_ = acmessage;
  } else {
    clear_has_acmessage();
    acmessage_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// T_APP_SEND_MESSAGE_RSP

// required fixed64 u64Context = 1;
inline bool T_APP_SEND_MESSAGE_RSP::has_u64context() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void T_APP_SEND_MESSAGE_RSP::set_has_u64context() {
  _has_bits_[0] |= 0x00000001u;
}
inline void T_APP_SEND_MESSAGE_RSP::clear_has_u64context() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void T_APP_SEND_MESSAGE_RSP::clear_u64context() {
  u64context_ = GOOGLE_ULONGLONG(0);
  clear_has_u64context();
}
inline ::google::protobuf::uint64 T_APP_SEND_MESSAGE_RSP::u64context() const {
  return u64context_;
}
inline void T_APP_SEND_MESSAGE_RSP::set_u64context(::google::protobuf::uint64 value) {
  set_has_u64context();
  u64context_ = value;
}

// required fixed32 u32Result = 2;
inline bool T_APP_SEND_MESSAGE_RSP::has_u32result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void T_APP_SEND_MESSAGE_RSP::set_has_u32result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void T_APP_SEND_MESSAGE_RSP::clear_has_u32result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void T_APP_SEND_MESSAGE_RSP::clear_u32result() {
  u32result_ = 0u;
  clear_has_u32result();
}
inline ::google::protobuf::uint32 T_APP_SEND_MESSAGE_RSP::u32result() const {
  return u32result_;
}
inline void T_APP_SEND_MESSAGE_RSP::set_u32result(::google::protobuf::uint32 value) {
  set_has_u32result();
  u32result_ = value;
}

// required bytes acObjID = 3;
inline bool T_APP_SEND_MESSAGE_RSP::has_acobjid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void T_APP_SEND_MESSAGE_RSP::set_has_acobjid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void T_APP_SEND_MESSAGE_RSP::clear_has_acobjid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void T_APP_SEND_MESSAGE_RSP::clear_acobjid() {
  if (acobjid_ != &::google::protobuf::internal::kEmptyString) {
    acobjid_->clear();
  }
  clear_has_acobjid();
}
inline const ::std::string& T_APP_SEND_MESSAGE_RSP::acobjid() const {
  return *acobjid_;
}
inline void T_APP_SEND_MESSAGE_RSP::set_acobjid(const ::std::string& value) {
  set_has_acobjid();
  if (acobjid_ == &::google::protobuf::internal::kEmptyString) {
    acobjid_ = new ::std::string;
  }
  acobjid_->assign(value);
}
inline void T_APP_SEND_MESSAGE_RSP::set_acobjid(const char* value) {
  set_has_acobjid();
  if (acobjid_ == &::google::protobuf::internal::kEmptyString) {
    acobjid_ = new ::std::string;
  }
  acobjid_->assign(value);
}
inline void T_APP_SEND_MESSAGE_RSP::set_acobjid(const void* value, size_t size) {
  set_has_acobjid();
  if (acobjid_ == &::google::protobuf::internal::kEmptyString) {
    acobjid_ = new ::std::string;
  }
  acobjid_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* T_APP_SEND_MESSAGE_RSP::mutable_acobjid() {
  set_has_acobjid();
  if (acobjid_ == &::google::protobuf::internal::kEmptyString) {
    acobjid_ = new ::std::string;
  }
  return acobjid_;
}
inline ::std::string* T_APP_SEND_MESSAGE_RSP::release_acobjid() {
  clear_has_acobjid();
  if (acobjid_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = acobjid_;
    acobjid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void T_APP_SEND_MESSAGE_RSP::set_allocated_acobjid(::std::string* acobjid) {
  if (acobjid_ != &::google::protobuf::internal::kEmptyString) {
    delete acobjid_;
  }
  if (acobjid) {
    set_has_acobjid();
    acobjid_ = acobjid;
  } else {
    clear_has_acobjid();
    acobjid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// T_APP_REGIST_USER_REQ

// required fixed64 u64Context = 1;
inline bool T_APP_REGIST_USER_REQ::has_u64context() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void T_APP_REGIST_USER_REQ::set_has_u64context() {
  _has_bits_[0] |= 0x00000001u;
}
inline void T_APP_REGIST_USER_REQ::clear_has_u64context() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void T_APP_REGIST_USER_REQ::clear_u64context() {
  u64context_ = GOOGLE_ULONGLONG(0);
  clear_has_u64context();
}
inline ::google::protobuf::uint64 T_APP_REGIST_USER_REQ::u64context() const {
  return u64context_;
}
inline void T_APP_REGIST_USER_REQ::set_u64context(::google::protobuf::uint64 value) {
  set_has_u64context();
  u64context_ = value;
}

// required bytes acUserName = 2;
inline bool T_APP_REGIST_USER_REQ::has_acusername() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void T_APP_REGIST_USER_REQ::set_has_acusername() {
  _has_bits_[0] |= 0x00000002u;
}
inline void T_APP_REGIST_USER_REQ::clear_has_acusername() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void T_APP_REGIST_USER_REQ::clear_acusername() {
  if (acusername_ != &::google::protobuf::internal::kEmptyString) {
    acusername_->clear();
  }
  clear_has_acusername();
}
inline const ::std::string& T_APP_REGIST_USER_REQ::acusername() const {
  return *acusername_;
}
inline void T_APP_REGIST_USER_REQ::set_acusername(const ::std::string& value) {
  set_has_acusername();
  if (acusername_ == &::google::protobuf::internal::kEmptyString) {
    acusername_ = new ::std::string;
  }
  acusername_->assign(value);
}
inline void T_APP_REGIST_USER_REQ::set_acusername(const char* value) {
  set_has_acusername();
  if (acusername_ == &::google::protobuf::internal::kEmptyString) {
    acusername_ = new ::std::string;
  }
  acusername_->assign(value);
}
inline void T_APP_REGIST_USER_REQ::set_acusername(const void* value, size_t size) {
  set_has_acusername();
  if (acusername_ == &::google::protobuf::internal::kEmptyString) {
    acusername_ = new ::std::string;
  }
  acusername_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* T_APP_REGIST_USER_REQ::mutable_acusername() {
  set_has_acusername();
  if (acusername_ == &::google::protobuf::internal::kEmptyString) {
    acusername_ = new ::std::string;
  }
  return acusername_;
}
inline ::std::string* T_APP_REGIST_USER_REQ::release_acusername() {
  clear_has_acusername();
  if (acusername_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = acusername_;
    acusername_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void T_APP_REGIST_USER_REQ::set_allocated_acusername(::std::string* acusername) {
  if (acusername_ != &::google::protobuf::internal::kEmptyString) {
    delete acusername_;
  }
  if (acusername) {
    set_has_acusername();
    acusername_ = acusername;
  } else {
    clear_has_acusername();
    acusername_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required bytes acPasswd = 3;
inline bool T_APP_REGIST_USER_REQ::has_acpasswd() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void T_APP_REGIST_USER_REQ::set_has_acpasswd() {
  _has_bits_[0] |= 0x00000004u;
}
inline void T_APP_REGIST_USER_REQ::clear_has_acpasswd() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void T_APP_REGIST_USER_REQ::clear_acpasswd() {
  if (acpasswd_ != &::google::protobuf::internal::kEmptyString) {
    acpasswd_->clear();
  }
  clear_has_acpasswd();
}
inline const ::std::string& T_APP_REGIST_USER_REQ::acpasswd() const {
  return *acpasswd_;
}
inline void T_APP_REGIST_USER_REQ::set_acpasswd(const ::std::string& value) {
  set_has_acpasswd();
  if (acpasswd_ == &::google::protobuf::internal::kEmptyString) {
    acpasswd_ = new ::std::string;
  }
  acpasswd_->assign(value);
}
inline void T_APP_REGIST_USER_REQ::set_acpasswd(const char* value) {
  set_has_acpasswd();
  if (acpasswd_ == &::google::protobuf::internal::kEmptyString) {
    acpasswd_ = new ::std::string;
  }
  acpasswd_->assign(value);
}
inline void T_APP_REGIST_USER_REQ::set_acpasswd(const void* value, size_t size) {
  set_has_acpasswd();
  if (acpasswd_ == &::google::protobuf::internal::kEmptyString) {
    acpasswd_ = new ::std::string;
  }
  acpasswd_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* T_APP_REGIST_USER_REQ::mutable_acpasswd() {
  set_has_acpasswd();
  if (acpasswd_ == &::google::protobuf::internal::kEmptyString) {
    acpasswd_ = new ::std::string;
  }
  return acpasswd_;
}
inline ::std::string* T_APP_REGIST_USER_REQ::release_acpasswd() {
  clear_has_acpasswd();
  if (acpasswd_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = acpasswd_;
    acpasswd_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void T_APP_REGIST_USER_REQ::set_allocated_acpasswd(::std::string* acpasswd) {
  if (acpasswd_ != &::google::protobuf::internal::kEmptyString) {
    delete acpasswd_;
  }
  if (acpasswd) {
    set_has_acpasswd();
    acpasswd_ = acpasswd;
  } else {
    clear_has_acpasswd();
    acpasswd_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required fixed32 u32Sex = 4;
inline bool T_APP_REGIST_USER_REQ::has_u32sex() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void T_APP_REGIST_USER_REQ::set_has_u32sex() {
  _has_bits_[0] |= 0x00000008u;
}
inline void T_APP_REGIST_USER_REQ::clear_has_u32sex() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void T_APP_REGIST_USER_REQ::clear_u32sex() {
  u32sex_ = 0u;
  clear_has_u32sex();
}
inline ::google::protobuf::uint32 T_APP_REGIST_USER_REQ::u32sex() const {
  return u32sex_;
}
inline void T_APP_REGIST_USER_REQ::set_u32sex(::google::protobuf::uint32 value) {
  set_has_u32sex();
  u32sex_ = value;
}

// -------------------------------------------------------------------

// T_APP_GET_ONLINE_USER_RSP

// required fixed64 u64Context = 1;
inline bool T_APP_GET_ONLINE_USER_RSP::has_u64context() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void T_APP_GET_ONLINE_USER_RSP::set_has_u64context() {
  _has_bits_[0] |= 0x00000001u;
}
inline void T_APP_GET_ONLINE_USER_RSP::clear_has_u64context() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void T_APP_GET_ONLINE_USER_RSP::clear_u64context() {
  u64context_ = GOOGLE_ULONGLONG(0);
  clear_has_u64context();
}
inline ::google::protobuf::uint64 T_APP_GET_ONLINE_USER_RSP::u64context() const {
  return u64context_;
}
inline void T_APP_GET_ONLINE_USER_RSP::set_u64context(::google::protobuf::uint64 value) {
  set_has_u64context();
  u64context_ = value;
}

// required fixed32 u32Result = 2;
inline bool T_APP_GET_ONLINE_USER_RSP::has_u32result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void T_APP_GET_ONLINE_USER_RSP::set_has_u32result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void T_APP_GET_ONLINE_USER_RSP::clear_has_u32result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void T_APP_GET_ONLINE_USER_RSP::clear_u32result() {
  u32result_ = 0u;
  clear_has_u32result();
}
inline ::google::protobuf::uint32 T_APP_GET_ONLINE_USER_RSP::u32result() const {
  return u32result_;
}
inline void T_APP_GET_ONLINE_USER_RSP::set_u32result(::google::protobuf::uint32 value) {
  set_has_u32result();
  u32result_ = value;
}

// required fixed32 u32UserNum = 3;
inline bool T_APP_GET_ONLINE_USER_RSP::has_u32usernum() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void T_APP_GET_ONLINE_USER_RSP::set_has_u32usernum() {
  _has_bits_[0] |= 0x00000004u;
}
inline void T_APP_GET_ONLINE_USER_RSP::clear_has_u32usernum() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void T_APP_GET_ONLINE_USER_RSP::clear_u32usernum() {
  u32usernum_ = 0u;
  clear_has_u32usernum();
}
inline ::google::protobuf::uint32 T_APP_GET_ONLINE_USER_RSP::u32usernum() const {
  return u32usernum_;
}
inline void T_APP_GET_ONLINE_USER_RSP::set_u32usernum(::google::protobuf::uint32 value) {
  set_has_u32usernum();
  u32usernum_ = value;
}

// repeated .general.T_GNRL_ONLINE_USER atOnlineUser = 4;
inline int T_APP_GET_ONLINE_USER_RSP::atonlineuser_size() const {
  return atonlineuser_.size();
}
inline void T_APP_GET_ONLINE_USER_RSP::clear_atonlineuser() {
  atonlineuser_.Clear();
}
inline const ::general::T_GNRL_ONLINE_USER& T_APP_GET_ONLINE_USER_RSP::atonlineuser(int index) const {
  return atonlineuser_.Get(index);
}
inline ::general::T_GNRL_ONLINE_USER* T_APP_GET_ONLINE_USER_RSP::mutable_atonlineuser(int index) {
  return atonlineuser_.Mutable(index);
}
inline ::general::T_GNRL_ONLINE_USER* T_APP_GET_ONLINE_USER_RSP::add_atonlineuser() {
  return atonlineuser_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::general::T_GNRL_ONLINE_USER >&
T_APP_GET_ONLINE_USER_RSP::atonlineuser() const {
  return atonlineuser_;
}
inline ::google::protobuf::RepeatedPtrField< ::general::T_GNRL_ONLINE_USER >*
T_APP_GET_ONLINE_USER_RSP::mutable_atonlineuser() {
  return &atonlineuser_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace application

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_application_5fstruct_2eproto__INCLUDED
